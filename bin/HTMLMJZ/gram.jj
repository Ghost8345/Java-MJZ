PARSER_BEGIN(HTML)
package HTMLMJZ;
/**
 * Simple brace matcher.
 */
public class HTML {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    HTML parser = new HTML(System.in);
    parser.Input();
  }

}

PARSER_END(HTML)


SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN : {
      <quote: "\""|"\'">
    | <sentence : <quote> (<alphanum>)* <quote> >
    | <alphanum: ["0"-"9" , "a"-"z", "A"-"Z"] | "/" | ":" | "." >
}





//TOKEN :
//{
//       <create: "ADD">
//   |   <elem: img | head | para | url>
//
//   |   <img: "IMAGE" "WITH" "SOURCE" <phrase>>
//   |   <head: "HEADING" <decorated_text>>
//   |   <para: "PARAGRAPH" <decorated_text>>
//   |   <url: "LINK" <decorated_url>>
//
//   |   <quote: "\""|"\'">
//   |   <phrase:  <phrase> <alphanum> | "">
//   |   <decorated_text: <decorated_text> "AND" <decorated_text> | <text> | <color> | <font>>
//   |   <decorated_url: <decorated_url> "AND" <link> | <decorated_text> | <text> | <color> | <font> | <link>>
//
//   |   <alphanum: ["0"-"9" , "a"-"z", "A"-"Z"] | "/" | ":" | "." >
//   |   <text: "WITH" "TEXT" <quote> <phrase> <quote>>
//   |   <color: "WITH" "COLOR" <quote> <phrase> <quote>>
//   |   <font: "WITH" "FONT" <quote> <phrase> <quote>>
//       <link: "WITH" "LINK" < quote > <phrase > <quote >>
//
//}

/** Root production. */
void Input():
{String str= "";}
{
    "ADD" [str = element()] {System.out.println(str); }
}

String element() : {
  	
  } {
    "IMAGE WITH SOURCE" {
        return "<img src=";
    }
    | "HEADING" {
        return head();
    }
}
String head():
 {String s="<h1"} {
	""

   }
  

