PARSER_BEGIN(HTML)
package HTMLMJZ;
/**
 * Simple brace matcher.
 */
public class HTML {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    HTML parser = new HTML(System.in);
    parser.Input();
  }

}

PARSER_END(HTML)

SKIP : {
  "\n"
}


TOKEN :
{
       <create: "ADD" <SPACE> <elem>> 
   |   <elem: <img> | <head> | <para> | <url>>

   |   <img: "IMAGE" <SPACE> "WITH" <SPACE> "SOURCE" <SPACE> <phrase>>
   |   <head: "HEADING" /* <decorated_text>*/>
   |   <para: "PARAGRAPH"/* <decorated_text>*/>
   |   <url: "LINK"/* <decorated_url>*/>

   |   <quote: "\""|"\'">
   |   <phrase: <quote> (["0"-"9" , "a"-"z", "A"-"Z"] | "/" | ":" | "." | " " | "-")* <quote>>
//   |   <decorated_text: <decorated_text> "AND" <decorated_text> | <text> | <color> | <font>>
//   |   <decorated_url: <decorated_url> "AND" <link> | <decorated_text> | <text> | <color> | <font> | <link>>

   |   <text: "WITH" <SPACE> "TEXT" <SPACE> <phrase>>
   |   <color: "WITH" <SPACE> "COLOR" <SPACE> <phrase>>
   |   <font: "WITH" <SPACE> "FONT" <SPACE> <phrase> >
//       <link: "WITH" "LINK"  <phrase >>

}

SPECIAL_TOKEN :
{
  <SPACE: (" " |"\t" | "\r" )*>
  
}


/** Root production. */
void Input():
{}
{
  
  	(<create>)*  	
    
}
//{
//    "ADD" [str = element()] {System.out.println(str); }
//}
//
//String element() : {
//
//  } {
//    "IMAGE WITH SOURCE" {
//        return "<img src=";
//    }
//    | "HEADING" {
//        return head();
//    }
//}
//String head():
// {String s="<h1"} {
//	""
//
//   }
  

